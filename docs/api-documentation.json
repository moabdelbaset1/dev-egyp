{
  "info": {
    "name": "E-commerce API Documentation",
    "version": "1.0.0",
    "description": "Complete API documentation for the E-commerce application backend powered by Appwrite",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://your-domain.com",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Customer Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Authenticate customer user and receive JWT token"
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"user\": {\n      \"$id\": \"user_123\",\n      \"email\": \"customer@example.com\",\n      \"name\": \"John Doe\"\n    },\n    \"session\": {\n      \"$id\": \"session_123\",\n      \"userId\": \"user_123\"\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/admin/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "admin", "login"]
            },
            "description": "Authenticate admin user with role-based access control"
          }
        },
        {
          "name": "Register Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newcustomer@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register new customer account"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout current user session"
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products?limit=10&offset=0&status=active",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                },
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            },
            "description": "Get products with filtering and pagination"
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products/123",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "123"]
            },
            "description": "Get single product by ID"
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Product\",\n  \"slug\": \"new-product\",\n  \"description\": \"Product description\",\n  \"price\": 99.99,\n  \"sku\": \"NP-001\",\n  \"stockQuantity\": 100,\n  \"categoryId\": \"category-123\",\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            },
            "description": "Create new product (Admin/Manager only)"
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Product Name\",\n  \"price\": 129.99\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/123",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "123"]
            },
            "description": "Update existing product (Admin/Manager only)"
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/123",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "123"]
            },
            "description": "Delete product (Admin only)"
          }
        },
        {
          "name": "Update Product Stock",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 50,\n  \"operation\": \"set\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/123/stock",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "123", "stock"]
            },
            "description": "Update product stock quantity"
          }
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Get Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders?limit=10&status=pending",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            },
            "description": "Get orders with filtering (Admin/Staff only)"
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/123",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "123"]
            },
            "description": "Get single order by ID"
          }
        },
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer-123\",\n  \"items\": [\n    {\n      \"productId\": \"product-123\",\n      \"productName\": \"Product Name\",\n      \"sku\": \"SKU-123\",\n      \"quantity\": 2,\n      \"price\": 50.00,\n      \"total\": 100.00\n    }\n  ],\n  \"shippingAddress\": {\n    \"fullName\": \"John Doe\",\n    \"addressLine1\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n  },\n  \"billingAddress\": {\n    \"fullName\": \"John Doe\",\n    \"addressLine1\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n  },\n  \"paymentMethod\": \"credit_card\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": ["{{base_url}}"],
              "path": ["api", "orders"]
            },
            "description": "Create new order"
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"shipped\",\n  \"note\": \"Order has been shipped\",\n  \"trackingNumber\": \"1Z999AA1234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/123/status",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "123", "status"]
            },
            "description": "Update order status (Admin/Staff only)"
          }
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Customer requested cancellation\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/orders/123/cancel",
              "host": ["{{base_url}}"],
              "path": ["api", "orders", "123", "cancel"]
            },
            "description": "Cancel order and restore stock"
          }
        }
      ]
    },
    {
      "name": "Customers",
      "item": [
        {
          "name": "Get Customers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customers?limit=10&segment=vip",
              "host": ["{{base_url}}"],
              "path": ["api", "customers"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "segment",
                  "value": "vip"
                }
              ]
            },
            "description": "Get customers with filtering (Admin/Staff only)"
          }
        },
        {
          "name": "Get Customer by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customers/123",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "123"]
            },
            "description": "Get single customer by ID"
          }
        },
        {
          "name": "Update Customer",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated Name\",\n  \"segment\": \"vip\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customers/123",
              "host": ["{{base_url}}"],
              "path": ["api", "customers", "123"]
            },
            "description": "Update customer information"
          }
        }
      ]
    },
    {
      "name": "Analytics & Reports",
      "item": [
        {
          "name": "Get Dashboard Metrics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/dashboard?period=30",
              "host": ["{{base_url}}"],
              "path": ["api", "analytics", "dashboard"],
              "query": [
                {
                  "key": "period",
                  "value": "30"
                }
              ]
            },
            "description": "Get dashboard metrics and KPIs"
          }
        },
        {
          "name": "Get Revenue Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/analytics/revenue?period=30&groupBy=day",
              "host": ["{{base_url}}"],
              "path": ["api", "analytics", "revenue"],
              "query": [
                {
                  "key": "period",
                  "value": "30"
                },
                {
                  "key": "groupBy",
                  "value": "day"
                }
              ]
            },
            "description": "Get revenue analytics with chart data"
          }
        },
        {
          "name": "Generate Sales Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"sales\",\n  \"format\": \"csv\",\n  \"dateRange\": {\n    \"startDate\": \"2023-01-01\",\n    \"endDate\": \"2023-12-31\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reports/generate",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "generate"]
            },
            "description": "Generate sales report in CSV/Excel format"
          }
        }
      ]
    },
    {
      "name": "Bulk Operations",
      "item": [
        {
          "name": "Bulk Import Products",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"collection\": \"products\",\n  \"data\": [\n    {\n      \"name\": \"Bulk Product 1\",\n      \"sku\": \"BULK-001\",\n      \"price\": 25.99,\n      \"categoryId\": \"cat-123\"\n    }\n  ],\n  \"validateData\": true,\n  \"skipDuplicates\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/bulk/import",
              "host": ["{{base_url}}"],
              "path": ["api", "bulk", "import"]
            },
            "description": "Bulk import products from CSV/JSON data"
          }
        },
        {
          "name": "Bulk Export Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"collection\": \"products\",\n  \"format\": \"csv\",\n  \"filters\": {\n    \"status\": \"active\"\n  },\n  \"limit\": 1000\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/bulk/export",
              "host": ["{{base_url}}"],
              "path": ["api", "bulk", "export"]
            },
            "description": "Bulk export data in CSV/JSON format"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set current timestamp for requests",
          "pm.collectionVariables.set('timestamp', new Date().toISOString());",
          "",
          "// Generate request ID for tracing",
          "pm.collectionVariables.set('requestId', 'req_' + Math.random().toString(36).substr(2, 9));"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Validate response structure",
          "pm.test('Response has success field', function () {",
          "    pm.response.to.have.property('success');",
          "});",
          "",
          "// Log response time",
          "console.log('Response time:', pm.response.responseTime, 'ms');",
          "",
          "// Validate response time is acceptable",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});"
        ]
      }
    }
  ]
}